name: Deploy Next.js site to Pages

on:
  push:
    branches: ["main-nextjs"]
  repository_dispatch:
    types: [trigger-pages-rebuild]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Detect the package manager (npm or yarn)
      - name: Detect package manager
        id: detect-package-manager
        run: |
          if [ -f "${{ github.workspace }}/yarn.lock" ]; then
            echo "manager=yarn" >> $GITHUB_OUTPUT
            echo "command=install" >> $GITHUB_OUTPUT
            echo "runner=yarn" >> $GITHUB_OUTPUT
            exit 0
          elif [ -f "${{ github.workspace }}/package.json" ]; then
            echo "manager=npm" >> $GITHUB_OUTPUT
            echo "command=ci" >> $GITHUB_OUTPUT
            echo "runner=npx --no-install" >> $GITHUB_OUTPUT
            exit 0
          else
            echo "Unable to determine package manager"
            exit 1
          fi

      # Setup Node.js environment
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: ${{ steps.detect-package-manager.outputs.manager }}

      # Set environment variable for static export
      - name: Set NEXT_EXPORT environment variable
        run: echo "NEXT_EXPORT=true" >> $GITHUB_ENV

      # Remove the API folder so that it doesn't get included in the static export
      - name: Remove API folder for static export
        run: rm -rf app/api

      # Install dependencies
      - name: Install dependencies
        run: ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command }} --legacy-peer-deps

      # Build the Next.js project (without linting)
      - name: Build with Next.js
        env:
          NEXT_PUBLIC_ESLINT_DISABLE: "true"
        run: ${{ steps.detect-package-manager.outputs.runner }} next build --no-lint

      - name: Generate Sitemaps
        run: npx next-sitemap

      # Upload the build artifact (the static output folder)
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./out

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
